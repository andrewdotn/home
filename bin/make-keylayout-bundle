#!/usr/bin/env python3

"""
Create keylayout .bundle, with unique name, from bare .keylayout file.

Note that .bundle files support press-and-hold in GUI applications.
"""

import argparse
import biplist
import os
import shutil
import subprocess
import time
from math import floor
from pathlib import Path

parser = argparse.ArgumentParser()
parser.add_argument('keylayout_file')
args = parser.parse_args()

keylayout_file = Path(args.keylayout_file)
version = time.strftime('%Y-%m-%d_%H.%M.%S_%z')
name = keylayout_file.with_suffix('').name + '_' + version
dns_name = name.replace(' ', '_').lower()

bundle_dir = Path(name + '.bundle')
bundle_dir.mkdir()
contents_dir = bundle_dir / 'Contents'
contents_dir.mkdir()


en_dir = contents_dir / 'Resources' / 'en.lproj'
en_dir.mkdir(parents=True)
with (en_dir / 'InfoPlist.strings').open('wb') as f:
    biplist.writePlist({name: name}, f)

(contents_dir / 'Info.plist').write_text(f"""<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>CFBundleIdentifier</key>
	<string>org.sil.ukelele.keyboardlayout.{dns_name}</string>
	<key>CFBundleName</key>
	<string>{name}</string>
	<key>CFBundleVersion</key>
	<string>2</string>
	<key>KLInfo_{name}</key>
	<dict>
		<key>TICapsLockLanguageSwitchCapable</key>
		<false/>
		<key>TISInputSourceID</key>
		<string>org.sil.ukelele.keyboardlayout.{dns_name}.{dns_name}</string>
		<key>TISIntendedLanguage</key>
		<string>en</string>
	</dict>
</dict>
</plist>
""")

(contents_dir / 'version.plist').write_text(f"""<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>BuildVersion</key>
	<string></string>
	<key>ProjectName</key>
	<string>{name}</string>
	<key>SourceVersion</key>
	<string></string>
</dict>
</plist>
""")

target_path = os.fspath(contents_dir / 'Resources' / f'{name}.keylayout')
shutil.copy(keylayout_file, target_path)
subprocess.check_call(['bump-keylayout-id', target_path, '--new-name', name])

print(name)
